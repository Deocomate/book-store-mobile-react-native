//====================================================================
// Unified Database Schema for Microservices
//====================================================================
// Define project settings (optional, for dbdiagram.io)
Project microservices_unified_db {
  database_type: 'PostgreSQL' // Or your preferred SQL database
  Note: 'Sơ đồ cơ sở dữ liệu hợp nhất cho hệ thống microservice.'
}

//========================================
// Identity & Access Management
//========================================
Table Users {
  user_id INT [pk, increment, note: 'Trước đây là User.id trong identity-service']
  username VARCHAR(50) [unique, not null]
  password_hash VARCHAR(255) [not null]
  email VARCHAR(255) [unique, not null]
  profile_image_url VARCHAR(255) [note: 'Đường dẫn tới ảnh đại diện']
  created_at TIMESTAMP [default: `now()`, not null]
  updated_at TIMESTAMP [default: `now()`, not null]

  Note: 'Bảng lưu trữ thông tin người dùng chính'
}

Table Roles {
  role_name VARCHAR(50) [pk, note: 'Tên vai trò, ví dụ: ADMIN, USER, STAFF']
  description TEXT

  Note: 'Bảng lưu trữ các vai trò trong hệ thống'
}

Table Permissions {
  permission_name VARCHAR(100) [pk, note: 'Tên quyền hạn, ví dụ: CREATE_PRODUCT, VIEW_ORDER']
  description TEXT

  Note: 'Bảng lưu trữ các quyền hạn chi tiết'
}

Table UserRoles {
  user_id INT [not null]
  role_name VARCHAR(50) [not null]

  Indexes {
    (user_id, role_name) [pk]
  }
  Note: 'Bảng trung gian cho mối quan hệ nhiều-nhiều giữa Users và Roles'
}

Table RolePermissions {
  role_name VARCHAR(50) [not null]
  permission_name VARCHAR(100) [not null]

  Indexes {
    (role_name, permission_name) [pk]
  }
  Note: 'Bảng trung gian cho mối quan hệ nhiều-nhiều giữa Roles và Permissions'
}

Table InvalidatedTokens {
  token_id VARCHAR(255) [pk, note: 'JWT ID (jti) của token đã bị vô hiệu hóa']
  expiry_date TIMESTAMP [not null, note: 'Thời gian hết hạn của token gốc']

  Note: 'Lưu trữ các token đã bị logout hoặc refresh để tránh tái sử dụng'
}

//========================================
// Profile Service
//========================================
Table Profiles {
  profile_id BIGINT [pk, increment, note: 'ID của địa chỉ/hồ sơ giao hàng']
  user_id INT [unique, not null, note: 'Liên kết tới người dùng sở hữu hồ sơ này']
  full_name VARCHAR(255) [not null]
  phone VARCHAR(20) [not null]
  address TEXT [not null]
  gender VARCHAR(10) [note: 'MALE, FEMALE. Enum trong code.']
  is_default BOOLEAN [default: false, not null, note: 'Địa chỉ mặc định của người dùng']
  created_at TIMESTAMP [default: `now()`, not null]
  updated_at TIMESTAMP [default: `now()`, not null]

  Note: 'Lưu trữ thông tin hồ sơ/địa chỉ giao hàng của người dùng'
}

//========================================
// Category Service
//========================================
Table Categories {
  category_id BIGINT [pk, increment]
  name VARCHAR(255) [not null]
  slug VARCHAR(255) [unique, not null]
  priority INT [default: 0, not null]
  parent_category_id BIGINT [null, note: 'Tự tham chiếu để tạo cấu trúc cây']
  category_type VARCHAR(50) [not null, note: 'PRODUCT, BLOG, SERVICE. Enum trong code.']
  created_at TIMESTAMP [default: `now()`, not null]
  updated_at TIMESTAMP [default: `now()`, not null]

  Note: 'Bảng quản lý danh mục cho sản phẩm, bài viết, v.v.'
}

//========================================
// Product Service
//========================================
Table Products {
  product_id BIGINT [pk, increment]
  title VARCHAR(255) [not null]
  author VARCHAR(255)
  publisher VARCHAR(255)
  publication_year INT
  package_size_info VARCHAR(255) [note: 'Thông tin kích thước đóng gói, ví dụ: 15x20x5 cm']
  page_count INT [note: 'Số trang sách']
  form_description VARCHAR(100) [note: 'Hình thức bìa, ví dụ: Bìa mềm, Bìa cứng']
  thumbnail_url VARCHAR(255) [note: 'Đường dẫn ảnh thumbnail chính']
  quantity_in_stock INT [not null, default: 0]
  sale_price DECIMAL(12,2) [not null, note: 'Giá bán sau khi đã giảm (discount trong code)']
  original_price DECIMAL(12,2) [not null, note: 'Giá gốc (price trong code)']
  discount_percent FLOAT [note: 'Tính toán: (1 - sale_price/original_price)*100']
  priority INT [default: 0, not null]
  description TEXT
  slug VARCHAR(300) [unique, not null]
  average_rating FLOAT [default: 0, note: 'Điểm đánh giá trung bình, cập nhật từ Rates']
  is_active BOOLEAN [default: true, not null]
  created_at TIMESTAMP [default: `now()`, not null]
  updated_at TIMESTAMP [default: `now()`, not null]

  Note: 'Bảng thông tin sản phẩm'
}

Table ProductImages {
  product_image_id BIGINT [pk, increment]
  product_id BIGINT [not null]
  image_url VARCHAR(255) [not null, note: 'Đường dẫn tới ảnh chi tiết sản phẩm']
  display_order INT [default: 0, not null, note: 'Thứ tự hiển thị ảnh']
  created_at TIMESTAMP [default: `now()`, not null]

  Note: 'Lưu trữ các ảnh chi tiết cho sản phẩm'
}

Table ProductCategories {
  product_id BIGINT [not null]
  category_id BIGINT [not null]

  Indexes {
    (product_id, category_id) [pk]
  }
  Note: 'Bảng trung gian cho mối quan hệ nhiều-nhiều giữa Products và Categories'
}

Table Rates {
  rate_id BIGINT [pk, increment]
  product_id BIGINT [not null]
  user_id INT [not null]
  rating_value INT [not null, note: 'Điểm đánh giá từ 1 đến 5 (vote trong code)']
  comment TEXT
  created_at TIMESTAMP [default: `now()`, not null]
  updated_at TIMESTAMP [default: `now()`, not null]

  Indexes {
    (product_id, user_id) [unique, name: 'unique_user_product_rate'] // Mỗi user chỉ đánh giá 1 lần/sản phẩm
  }
  Note: 'Đánh giá của người dùng cho sản phẩm'
}

//========================================
// Blog Service
//========================================
Table Blogs {
  blog_id BIGINT [pk, increment]
  title VARCHAR(255) [not null]
  content TEXT [not null]
  thumbnail_url VARCHAR(255)
  priority INT [default: 0, not null]
  slug VARCHAR(300) [unique, not null]
  category_id BIGINT [not null]
  author_user_id INT [null, note: 'Người viết bài, nếu có']
  view_count INT [default: 0, not null]
  published_at TIMESTAMP [null, note: 'Thời điểm xuất bản bài viết']
  created_at TIMESTAMP [default: `now()`, not null]
  updated_at TIMESTAMP [default: `now()`, not null]

  Note: 'Bảng lưu trữ các bài viết blog'
}

//========================================
// Cart Service
//========================================
Table Carts {
  user_id INT [pk, note: 'Giỏ hàng của người dùng, user_id là PK và FK tới Users']
  created_at TIMESTAMP [default: `now()`, not null]
  updated_at TIMESTAMP [default: `now()`, not null]

  Note: 'Mỗi người dùng có một giỏ hàng duy nhất'
}

Table CartProducts {
  cart_product_id BIGINT [pk, increment]
  cart_user_id INT [not null, note: 'Tham chiếu tới Carts.user_id']
  product_id BIGINT [not null]
  quantity INT [not null, default: 1, note: 'Số lượng sản phẩm trong giỏ']
  added_at TIMESTAMP [default: `now()`, not null]

  Indexes {
    (cart_user_id, product_id) [unique, name: 'unique_user_cart_product'] // Mỗi sản phẩm chỉ xuất hiện 1 lần trong giỏ của user
  }
  Note: 'Các sản phẩm trong giỏ hàng của người dùng'
}

//========================================
// Order Service
//========================================
Table Orders {
  order_id BIGINT [pk, increment]
  user_id INT [not null]
  profile_id BIGINT [not null, note: 'Địa chỉ giao hàng được chọn lúc đặt hàng']
  // Denormalized fields from Profile for historical record
  shipping_full_name VARCHAR(255) [not null]
  shipping_phone VARCHAR(20) [not null]
  shipping_address TEXT [not null]
  order_status VARCHAR(50) [not null, note: 'PENDING_CONFIRMATION, CONFIRMED, PREPARING_SHIPMENT, SHIPPING, DELIVERED, CANCELLED, RETURNED. Enum/Integer trong code.']
  payment_method VARCHAR(50) [not null, note: 'COD, VNPAY, MOMO, BANK_TRANSFER. Enum/Integer trong code.']
  payment_status VARCHAR(50) [not null, note: 'PENDING, PAID, FAILED, REFUNDED. Enum/Integer trong code.']
  subtotal_price DECIMAL(12,2) [not null, note: 'Tổng tiền hàng trước thuế, phí']
  shipping_fee DECIMAL(10,2) [default: 0, not null]
  discount_applied DECIMAL(10,2) [default: 0, not null, note: 'Số tiền giảm giá từ voucher, khuyến mãi']
  total_order_price DECIMAL(12,2) [not null, note: 'Tổng tiền cuối cùng khách phải trả']
  customer_note TEXT
  admin_note TEXT [note: 'Ghi chú của quản trị viên cho đơn hàng']
  cancellation_reason TEXT [null, note: 'Lý do hủy đơn hàng nếu có']
  created_at TIMESTAMP [default: `now()`, not null]
  updated_at TIMESTAMP [default: `now()`, not null]
  confirmed_at TIMESTAMP [null]
  shipped_at TIMESTAMP [null]
  delivered_at TIMESTAMP [null]
  cancelled_at TIMESTAMP [null]

  Note: 'Thông tin đơn hàng của khách'
}

Table OrderProducts {
  order_product_id BIGINT [pk, increment]
  order_id BIGINT [not null]
  product_id BIGINT [not null]
  product_name_snapshot VARCHAR(255) [not null, note: 'Tên sản phẩm tại thời điểm đặt hàng']
  quantity_ordered INT [not null]
  price_per_unit_snapshot DECIMAL(12,2) [not null, note: 'Giá sản phẩm tại thời điểm đặt hàng']
  total_line_price DECIMAL(12,2) [not null, note: 'Thành tiền cho dòng sản phẩm này']

  Note: 'Chi tiết các sản phẩm trong một đơn hàng'
}

//========================================
// Payment Service
//========================================
Table Payments {
  payment_id VARCHAR(255) [pk, note: 'Mã giao dịch từ cổng thanh toán hoặc mã nội bộ']
  order_id BIGINT [not null]
  payment_gateway VARCHAR(50) [not null, note: 'VNPAY, MOMO, STRIPE, COD_CONFIRMATION']
  gateway_transaction_id VARCHAR(255) [null, unique, note: 'Mã giao dịch của cổng thanh toán']
  amount_paid DECIMAL(12,2) [not null]
  payment_status_gateway VARCHAR(50) [not null, note: 'Trạng thái từ cổng thanh toán (SUCCESS, FAILED, PENDING)']
  payment_date TIMESTAMP [not null, default: `now()`]
  gateway_response_data TEXT [note: 'Dữ liệu đầy đủ từ cổng thanh toán (JSON/XML)']
  created_at TIMESTAMP [default: `now()`, not null]

  Note: 'Lưu trữ thông tin các giao dịch thanh toán'
}

//========================================
// Customer Care Service
//========================================
Table CustomerCares {
  customer_care_id BIGINT [pk, increment]
  name VARCHAR(255) [not null]
  phone VARCHAR(20) [not null]
  email VARCHAR(255) [not null]
  address TEXT
  content TEXT [not null]
  status VARCHAR(50) [default: 'OPEN', not null, note: 'OPEN, IN_PROGRESS, RESOLVED, CLOSED']
  assigned_to_user_id INT [null, note: 'Nhân viên CSKH xử lý yêu cầu này']
  created_at TIMESTAMP [default: `now()`, not null]
  updated_at TIMESTAMP [default: `now()`, not null]
  resolved_at TIMESTAMP [null]

  Note: 'Lưu trữ các yêu cầu hỗ trợ từ khách hàng'
}

//========================================
// File Service (Adapted from MongoDB)
//========================================
Table FileManagements {
  file_id VARCHAR(255) [pk, note: 'UUID hoặc tên file duy nhất được lưu trữ']
  owner_user_id INT [null, note: 'Người dùng sở hữu file này']
  original_file_name VARCHAR(255) [not null]
  content_type VARCHAR(100)
  size_bytes BIGINT [not null]
  md5_checksum VARCHAR(32) [null]
  storage_path VARCHAR(512) [not null, note: 'Đường dẫn lưu trữ vật lý hoặc key trên cloud storage']
  access_url VARCHAR(512) [not null, note: 'URL để truy cập file (có thể là URL download từ API gateway)']
  created_at TIMESTAMP [default: `now()`, not null]
  updated_at TIMESTAMP [default: `now()`, not null]

  Note: 'Quản lý metadata của các file đã upload'
}

//========================================
// Notification Service
//========================================
Table FcmTokens {
  fcm_token_id VARCHAR(255) [pk, note: 'ID của token (có thể là chính token nếu đủ unique)']
  user_id INT [not null]
  device_token TEXT [not null, unique, note: 'Giá trị Firebase Cloud Messaging token']
  device_type VARCHAR(50) [null, note: 'ANDROID, IOS, WEB']
  created_at TIMESTAMP [default: `now()`, not null]
  last_used_at TIMESTAMP [default: `now()`, not null]

  Note: 'Lưu trữ FCM token của các thiết bị người dùng để gửi push notification'
}

Table NotificationsLog {
  notification_log_id BIGINT [pk, increment]
  user_id_recipient INT [null, note: 'Người nhận thông báo (nếu là user cụ thể)']
  channel VARCHAR(20) [not null, note: 'EMAIL, PUSH_NOTIFICATION, SMS']
  title VARCHAR(255)
  body TEXT
  template_code VARCHAR(100) [null, note: 'Mã template được sử dụng (nếu có)']
  params_data JSON [null, note: 'Dữ liệu truyền vào template']
  status VARCHAR(20) [not null, note: 'SENT, FAILED, READ, PENDING']
  error_message TEXT [null, note: 'Thông báo lỗi nếu gửi thất bại']
  sent_at TIMESTAMP [default: `now()`, not null]

  Note: 'Log lại các thông báo đã được gửi đi'
}


//========================================
// Relationships
//========================================

// Identity
Ref: UserRoles.user_id > Users.user_id
Ref: UserRoles.role_name > Roles.role_name
Ref: RolePermissions.role_name > Roles.role_name
Ref: RolePermissions.permission_name > Permissions.permission_name

// Profile
Ref: Profiles.user_id > Users.user_id

// Category
Ref: Categories.parent_category_id > Categories.category_id

// Product
Ref: ProductImages.product_id > Products.product_id
Ref: ProductCategories.product_id > Products.product_id
Ref: ProductCategories.category_id > Categories.category_id
Ref: Rates.product_id > Products.product_id
Ref: Rates.user_id > Users.user_id

// Blog
Ref: Blogs.category_id > Categories.category_id
Ref: Blogs.author_user_id > Users.user_id

// Cart
Ref: Carts.user_id > Users.user_id // Cart is identified by user_id
Ref: CartProducts.cart_user_id > Carts.user_id // Links to the user's cart
Ref: CartProducts.product_id > Products.product_id

// Order
Ref: Orders.user_id > Users.user_id
Ref: Orders.profile_id > Profiles.profile_id
Ref: OrderProducts.order_id > Orders.order_id
Ref: OrderProducts.product_id > Products.product_id

// Payment
Ref: Payments.order_id > Orders.order_id

// Customer Care
Ref: CustomerCares.assigned_to_user_id > Users.user_id

// File Management
Ref: FileManagements.owner_user_id > Users.user_id

// Notification
Ref: FcmTokens.user_id > Users.user_id
Ref: NotificationsLog.user_id_recipient > Users.user_id
